#
# The contents of this file are subject to the terms of the Common Development and
# Distribution License (the License). You may not use this file except in compliance with the
# License.
#
# You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the
# specific language governing permission and limitations under the License.
#
# When distributing Covered Software, include this CDDL Header Notice in each file and include
# the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL
# Header, with the fields enclosed by brackets [] replaced by your own identifying
# information: "Portions copyright [year] [name of copyright owner]".
#
# Copyright 2016 ForgeRock AS.
#

schema.desc=Routes are configurations that you add to OpenIG to serve requests.

handler.desc=Reference (or inline declaration) of this route's main `Handler`: accepted incoming \
  requests will be processed by this `Handler` and a `Response` will asynchronously be created.

condition.desc=Boolean `Expression` that specify acceptance (or not) of incoming `Request` by this route. \
  When omitted, all requests are accepted.

heap.desc=List of named Heap object declaration that can be referenced from within the route's `handler` configuration.

heap-object.desc=Declaration of an object located in this route's heap. It need to specify \
  a unique (and mandatory) `name` attribute.

heap-object-name.desc=Name of this heap object, must be unique amongst other objects declared in this heap.

heap-object-type.desc=Type of this heap object, can be a fully qualified class name or a type alias supported by OpenIG.

heap-object-config.desc=Configuration data for this heap object. The exact content/schema of this object \
  depends on the declared `type` of the configured heap object.

name.desc=Name of this route. This attribute is used to lexicographically compare routes \
  in order to sort them consistently. That sorted list is then traversed sequentially to find \
  a route that accept the incoming `Request`.
