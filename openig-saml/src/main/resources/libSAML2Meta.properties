#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 2007 Sun Microsystems Inc. All Rights Reserved
#
# The contents of this file are subject to the terms
# of the Common Development and Distribution License
# (the License). You may not use this file except in
# compliance with the License.
#
# You can obtain a copy of the License at
# https://opensso.dev.java.net/public/CDDLv1.0.html or
# opensso/legal/CDDLv1.0.txt
# See the License for the specific language governing
# permission and limitations under the License.
#
# When distributing Covered Code, include this CDDL
# Header Notice in each file and include the License file
# at opensso/legal/CDDLv1.0.txt.
# If applicable, add the following below the CDDL Header,
# with the fields enclosed by brackets [] replaced by
# your own identifying information:
# "Portions Copyrighted [year] [name of copyright owner]"
#
# $Id: libSAML2Meta.properties,v 1.6 2009/03/13 21:32:02 asyhuang Exp $
#



usage=\nUSAGE:\n        saml2meta import -u <userdn> [-w <password>|-j <password file>]\n                  [-r <realm>] [-m <xml file name>] [-x <xml file name>]\n                  [-t <circle of trust name>]\n        saml2meta export -u <userdn> [-w <password>|-j <password file>]\n                  [-r <realm>] -e <entity id> [-n] [-m <xml file name>]\n                  [-x <xml file name>]\n        saml2meta template -u <userdn> [-w <password>|-j <password file>]\n                  [-s <metaAlias> [-a <certAlias>] [-f <certAlias>]]\n                  [-d <metaAlias> [-b <certAlias>] [-g <certAlias>]]\n                  [-e <entity id>] -m <xml file name> -x <xml file name>\n        saml2meta delete -u <userdn> [-w <password>|-j <password file>]\n                  [-r <realm>] -e <entity id> [-c]\n        saml2meta list -u <userdn>\n                  [-w <password>|-j <password file>]\n        saml2meta cotcreate -u <userdn>\n                  [-w <password>|-j <password file>]\n                  -t <circle of trust name> [-p <prefix url>]\n                  [-l <entity id, entity id,...>]\n        saml2meta cotdelete -u <userdn>\n                  [-w <password>|-j <password file>]\n                  -t <circle of trust name>\n        saml2meta cotadd -u <userdn>\n                  [-w <password>|-j <password file>]\n                  -t <circle of trust name> -e <entity id>\n        saml2meta cotremove -u <userdn>\n                  [-w <password>|-j <password file>]\n                  -t <circle of trust name> -e <entity id>\n        saml2meta cotmember -u <userdn>\n                  [-w <password>|-j <password file>]\n                  -t <circle of trust name>\n        saml2meta cotlist -u <userdn>\n                  [-w <password>|-j <password file>]\n        saml2meta -V\n        saml2meta -?\n\nDESCRIPTION:\n        Manages SAML 2.0 metadata and extended configuration.\n\n        The import subcommand is used to load standard metadata and/or extended\n        configuration.\n        The export is used to export standard metadata and/or extended\n        configuration in XML format. At least one of '-m' or '-x' option is\n        required.\n        The template is used to generate standard metadata for a hosted entity.\n        The delete is used to remove standard metadata and/or extended entity\n        configuration.\n        The list command is used to list all the entity id in the system.\n        The cotcreate command is used to create the circle of trust.\n        The cotdelete command is used to delete the circle of trust.\n        The cotadd command is used to add trusted provider to the circle of\n        trust.\n        The cotremove command is used to remove trusted provider from the\n        circle of trust.\n        The cotmember command is used to list the trusted providers from the\n        circle of trust.\n        The cotlist command is used to list all the name of circle of\n        trust in the system.\n\nOPTIONS:\n        The following options are supported:\n        -u <userdn>, --runasdn <userdn>\n          Full DN of the user running the command.\n\n        -w <password>, --password <password>\n          Specify password of the user running the command.\n\n        -j <password file>, --passwordfile <password file>\n          Specify file name containing password of the user running the command.\n\n        -r <realm>, --realm <realm>\n          Specify realm for the metadata or entity configuration. The default\n          is root realm.\n\n        -m <xml file name>, --meta-data-file <xml file name>\n          Specify file name for the standard metadata.\n\n        -x <xml file name>, --extended-data-file<xml file name>\n          Specify file name for the extended entity configuration.\n\n        -e <entity id>, --entityid <entity id>\n          Specify entity id.\n\n        -s <metaAlias>, --serviceprovider <metaAlias>\n          Specify metaAlias for hosted service provider to be created.\n          The format must be <realm>/<some string without "/"> for non-root\n          realm or /<some string without "/"> for root realm.\n\n        -a <certAlias>, --spscertalias <certAlias>\n          Specify signing cert alias for hosted service provider to be created.\n\n        -f <certAlias>, --specertalias <certAlias>\n          Specify encryption cert alias for hosted service provider to be\n          created.\n\n        -d <metaAlias>, --identityprovider <metaAlias>\n          Specify metaAlias for hosted identity provider to be created.\n          The format must be <realm>/<some string without "/"> for non-root\n          realm or /<some string without "/"> for root realm.\n\n        -b <certAlias>, --idpscertalias <certAlias>\n          Specify signing cert alias for hosted identity provider to be created.\n\n        -g <certAlias>, --idpecertalias <certAlias>\n          Specify encryption cert alias for hosted identity provider to be\n          created.\n\n        -n, --sign\n          Sign the exported xml file(s).\n\n        -c, --extendedonly\n          Delete extended entity configuration only.\n\n        -t, --cot\n          Name of the circle of trust\n\n        -p, --prefix\n          Prefix URL for idp discovery reader and writer url.\n\n        -l, --trustedproviders\n          List of trusted providers in the circle of trust.\n\n        -V, --version\n
          Print version information.\n\n        -?, --help\n          Print help information (this message).


entity_descriptor_exists=Entity descriptor "{0}" already exists under realm "{1}".
entity_config_exists=Entity config "{0}" already exists under realm "{1}".
invalid_descriptor=Entity descriptor "{0}" under realm "{1}" has invalid syntax.
empty_entityid=Entity ID is not set.
role_already_exists=A {0} entity already exists.  Go to the Federation tab, and delete the existing {0} entity.  Then you can return to reconfigure it.
entity_descriptor_not_exist=Entity descriptor "{0}" does not exist under realm "{1}".
invalid_config=Entity config "{0}" under realm "{1}" has invalid syntax.
entity_config_not_exist=Entity config "{0}" does not exist under realm "{1}".
read_password_prompt=Password for {0}:
login_fail=Login failed.
file_not_found=File "{0}" not found.
invalid_descriptor_file=Entity descriptor in file "{0}" has invalid syntax.
file_import_ok=File "{0}" was imported successfully.
invalid_config_file=Entity config in file "{0}" has invalid syntax.
file_export_descriptor_ok=Entity descriptor was exported to file "{0}" successfully.
file_export_config_ok=Entity config was exported to file "{0}" successfully.
export_missing_m_x=At least one of '-m' or '-x' option is required for 'export'.
missing_protocol=Unable to find server protocol from config file.
missing_host=Unable to find server host name from config file.
missing_port=Unable to find server port from config file.
missing_deploy_uri=Unable to find server deploy URI from config file.
error_write_to_file=Unable to write to file "{0}"
descriptor_template_ok=Hosted entity descriptor for realm "{1}" was written to file "{0}" successfully.
config_template_ok=Hosted entity config for realm "{1}" was written to file "{0}" successfully.
descriptor_delete_ok=Descriptor and config for entity "{0}" was deleted successfully.
config_delete_ok=Config for entity "{0}" was deleted successfully.
invalid_realm=Unable to read service configuration for realm "{0}".
invalid_cert_alias=Unable to find certificate by cert alias "{0}".
verify_no_cert=Unable to find certificate to verify signature under element "{0}".
untrusted_cert=Certificate found in Signature or KeyDescriptor under element "{0}" is not trusted.
verify_fail=Unable to verify signature under element "{0}".
cotcreate_ok=Circle of trust "{0}" is created successfully.
cotdelete_ok=Circle of trust "{0}" is deleted successfully.
cotremove_ok=EntityId "{1}" is removed from the circle of trust "{0}" successfully.
cotadd_ok=EntityId "{1}" is added to the circle of trust "{0}" successfully.
cotmember_ok=Circle of trust "{0}" is listed successfully.
invalid_reader_url=Input reader url is  not in URL format.
invalid_writer_url=Input writer url is not in URL format. 
invalid_cot_status=Status of circle of trust is invalid.
null_config=Unable to get configuration instance for SAML2COT.
null_cot=Input saml2 circle of trust descriptor is null.
cot_name_invalid=SAML2 circle of trust descriptor name is invalid.
cot_existed=SAML2 circle of trust descriptor existed.
entityid_invalid=Input entity id is invalid.
no_cot=SAML2 circle of trust is not found.
fail_remove_cot=Failed to remove the entity from the circle of trust. 
fail_add_cot=Failed to add entity to the circle of trust. 
entity_in_cot=The entity existed in the circle of trust already.
unknownError=Unknown error occurred.
cotlist_ok=Operation: cotlist is executed successfully.
cotmember_no_entity=There are no trusted entities in the circle of trust: "{0}". 
cotmember_entity=Listing the trusted entities in the circle of trust: "{0}".
entity_id=Entity ID:
none_cot=There is no circle of trust in the system.
cotlist_list=Listing all the circle of trust name in the system:
cot_name=Circle of Trust Name:
cot_delete_prohibit=Delete the circle of trust is not allowed.
none_entity=There is no entity in the system.
list_entity=Listing all the entity id(s) in the system:
list_ok=Operation: list is executed successfully.
