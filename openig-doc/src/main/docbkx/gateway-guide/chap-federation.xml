<?xml version="1.0" encoding="UTF-8"?>
<!--
  ! CCPL HEADER START
  !
  ! This work is licensed under the Creative Commons
  ! Attribution-NonCommercial-NoDerivs 3.0 Unported License.
  ! To view a copy of this license, visit
  ! http://creativecommons.org/licenses/by-nc-nd/3.0/
  ! or send a letter to Creative Commons, 444 Castro Street,
  ! Suite 900, Mountain View, California, 94041, USA.
  !
  ! You can also obtain a copy of the license at
  ! src/main/resources/legal-notices/CC-BY-NC-ND.txt.
  ! See the License for the specific language governing permissions
  ! and limitations under the License.
  !
  ! If applicable, add the following below this CCPL HEADER, with the fields
  ! enclosed by brackets "[]" replaced with your own identifying information:
  !      Portions Copyright [yyyy] [name of copyright owner]
  !
  ! CCPL HEADER END
  !
  !      Copyright 2011-2012 ForgeRock AS
  !    
-->
<chapter xml:id='chap-federation'
 xmlns='http://docbook.org/ns/docbook'
 version='5.0' xml:lang='en'
 xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'
 xsi:schemaLocation='http://docbook.org/ns/docbook http://docbook.org/xml/5.0/xsd/docbook.xsd'
 xmlns:xlink='http://www.w3.org/1999/xlink'
 xmlns:xinclude='http://www.w3.org/2001/XInclude'>
 <title>Federation Reference</title>

 <para>The Federation component of OpenIG is a standards based
 authentication service used by OpenIG to validate a user and retrieve
 key attributes of the user in order to log them into the target
 applications.</para>

 <orderedlist>
  <para>There are two ways the Federation Service can be invoked:</para>
  <listitem>
   <para>IDP initiated SSO, where the remote Identity Provider sends an
    unsolicited Authentication statement to OpenIG
   </para>
  </listitem>
  <listitem>
   <para>SP initiated SSO where OpenIG calls the Federation Service to
    initiate Federated SSO with the Identity provider
   </para>
  </listitem>
 </orderedlist>

 <para>In either case, the job of the Federation Service is to validate the
 user and pass the required attributes to OpenIG to log the user into
 target applications.</para>

 <para>See the <link xlink:href="gateway-guide#chap-federation-tutorial"
 xlink:role="http://docbook.org/xlink/role/olink"><citetitle>Federation
 Gateway Tutorial</citetitle></link> for hands on experience with the
 Federation Gateway.</para>

 <section xml:id="federation-installation">
  <title>Installation Overview</title>

  <itemizedlist>
   <para>This section is a summary of the steps needed to prepare OpenIG to
   act as a Federation endpoint for your target application.</para>
   <listitem>
    <para>Install OpenIG.</para>
   </listitem>
   <listitem>
    <para>Configure OpenIG to log users into the target application.
    Getting this to work before configuring Federation makes the
    process much simpler to troubleshoot if anything goes wrong.</para>
   </listitem>
   <listitem>
    <para>Add Federation configuration to the OpenIG configuration file.</para>
   </listitem>
   <listitem>
    <para>Add the assertion and subject mappings, optional redirect URI and
    optional logout URI to the Federation configuration.</para>
   </listitem>
   <listitem>
    <para>Export the Identity Provider MetaData from the remote Identity
     Provider.
    </para>
   </listitem>
   <listitem>
    <para>Import the Gateway metadata to your Identity Provider.</para>
   </listitem>
  </itemizedlist>
 </section>

 <section xml:id="federation-configuration-files">
  <title>Configuration File Overview</title>

  <para>The Federation service is configured by modifying the OpenIG
  <filename>config.json</filename> and Federation specific XML files located
  in the home directory of the effective user running the web application
  container housing OpenIG. The home directory of this user is referred to as
  <filename>$HOME_DIR</filename> in this document. By default, the
  Federation service looks in <filename>$HOME_DIR/.ForgeRock/OpenIG/</filename>
  for <filename>config.json</filename> and
  <filename>$HOME_DIR/.ForgeRock/SAML/</filename> for the Federation XML
  configuration.</para>

  <variablelist>
   <para>The following is a description of the files:</para>

   <varlistentry>
    <term><filename>$HOME_DIR/.ForgeRock/OpenIG/config.json</filename></term>
    <listitem>
     <para>This is the core configuration file for OpenIG. You must configure
     both this file and the XML files specific to the Federation Service.
     The reason there are two sets of configuration files is the Federation
     Service is based on the openFed library from the OpenAM open source
     project. The openFed library and the Federation configuration files are
     taken directly from the OpenFM release. In order to get the Federation
     Service configured you must tag swap the XML files. If you are familiar
     with the workflow in the OpenAM console you can generate a Fedlet and
     directly copy the configuration files into
     <filename>$HOME_DIR/.ForgeRock/SAML/</filename>.</para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><filename>$HOME_DIR/.ForgeRock/SAML/FederationConfig.properties</filename></term>
    <listitem>
     <para>Advanced features of the openFed library. The defaults suffice in
     most deployments.</para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><filename>$HOME_DIR/.ForgeRock/SAML/gateway.cot</filename></term>
    <listitem>
     <para>Circle of trust for the Gateway and the Identity Provider.</para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><filename>$HOME_DIR/.ForgeRock/SAML/idp.xml</filename></term>
    <listitem>
     <para>This file is not included with the Federation Service XML. It must
     be generated by the Identity Provider and copied into the configuration
     directory.</para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><filename>$HOME_DIR/.ForgeRock/SAML/idp-extended.xml</filename></term>
    <listitem>
     <para>Standard extensions for the Identity Provider.</para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><filename>$HOME_DIR/.ForgeRock/SAML/sp.xml</filename></term>
    <term><filename>$HOME_DIR/.ForgeRock/SAML/sp-extended.xml</filename></term>
    <listitem>
     <para>These are the standard metadata and metadata extensions for the
     OpenIG Federation Service.</para>
    </listitem>
   </varlistentry>
  </variablelist>
 </section>

 <section xml:id="federation-configuring">
  <title>Configuring the Federation Service</title>

  <para>The simplest way to configure the Federation Gateway is to use the
  OpenAM task wizard to generate a Fedlet and then use the Fedlet
  configuration files in the Gateway configuration directory. If you use the
  Fedlet configuration files, simply unpack <filename>Fedlet.war</filename>
  and copy all the files listed above into
  <filename>$HOME_DIR/.ForgeRock/SAML/</filename>. You do not have to modify
  the files to do basic IDP and SP initiated SSO with OpenIG. Note that the
  sample Federation Gateway <filename>config.json</filename> templates uses
  <literal>/saml</literal> as the URI so your Fedlet endpoint should be
  specified as <literal><replaceable>protocol</replaceable>://<replaceable
  >host</replaceable>.<replaceable>domain</replaceable>:<replaceable
  >port</replaceable>/saml</literal>.</para>

  <para>If you do not use the Fedlet wizard, then follow the instructions for
  the unconfigured Fedlet and then copy the Fedlet configuration files to the
  <filename>$HOME_DIR/.ForgeRock/SAML/</filename> directory. You must also
  export the metadata from the IDP and copy it to <filename>idp.xml</filename>
  in the same directory.</para>
 </section>

 <section xml:id="federation-config-json">
  <title>Config.json Sample</title>

  <para>The following sample configuration is from the tutorial on federating
  WordPress. The sample configuration receives a SAML assertion from OpenAM
  and then logs the user into WordPress using the user name and password from
  the assertion.</para>

  <para>The following excerpt of the Federation Service JSON is from the OpenIG
  <filename>config.json</filename> file. All fields are mandatory except
  <literal>logoutURI</literal>. The <literal>logoutURI</literal> is only
  necessary if your configuration uses the single logout feature.</para>

  <programlisting language="javascript">{
    "name": "FederationServlet",
    "type": "org.forgerock.openig.saml.FederationServlet",
    "config": {
        "assertionMapping": {
            "userName":"uid",
            "password":"userPassword" 
        },  
        "subjectMapping":"subjectName",
        "sessionIndexMapping":"sessionIndex",
        "redirectURI":"/login",
        "logoutURI":"/logout" 
        "assertionConsumerEndpoint":"fedletapplication",
        "SPinitiatedSSOEndpoint":"SPInitiatedSSO",
        "singleLogoutEndpoint":"fedletSlo" 
   }   
}</programlisting>

  <variablelist>
   <varlistentry>
    <term>name</term>
    <listitem>
     <para>Name of the Federation Service within the OpenIG runtime.
     This value should not be modified.</para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term>type</term>
    <listitem>
     <para>Classname of the Federation Servlet. This value should not be
     modified.</para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term>asertionMapping</term>
    <listitem>
     <para>The <literal>assertionMapping</literal> defines how to transform the
     attributes from the incoming assertion to attribute value pairs in the
     session. Each entry in the <literal>assertionMapping</literal> is of the
     form <literal><replaceable>attributeName</replaceable>:<replaceable
     >assertionName</replaceable></literal>. The
     <replaceable>attributeName</replaceable> represents the name of the
     attribute set in the session. The <replaceable>assertionName</replaceable>
     is used to fetch the value from the incoming assertion, which becomes the
     value in the session. The following statements correspond to the sample
     shown above.</para>

     <para>If the incoming assertion contains the statement:</para>
     
     <literallayout class="monospaced">uid = jojo</literallayout>
     <literallayout class="monospaced">userPassword = 123456789</literallayout>

     <para>Then the following values are set in the session:</para>

     <literallayout class="monospaced">userName = jojo</literallayout>
     <literallayout class="monospaced">password = 123456789</literallayout>

     <para>Notice that you must also modify attributeMap in the
     <filename>$HOME_DIR/.ForgeRock/SAML/sp-extended.xml</filename> to match
     the assertion mapping configured in the IDP metadata.</para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term>subjectMapping</term>
    <listitem>
     <para>The value contained in the assertion subject is set as the value of
     the attribute <literal>subjectName</literal> in the session.</para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term>redirectURI</term>
    <listitem>
     <para>The <literal>redirectURI</literal> should be set to the page the
     Form-Filter recognizes as the login page for the target application.
     This is how OpenIG and the Federation service work together to provide
     single sign-on. When OpenIG detects the target application's login page,
     it redirects to the Federation Service. Once the Federation Service
     validates the SAML exchanges with the IDP and sets the required session
     attributes, it redirect back to the target application's login page.
     This allows the Form-Filter to finish the job of logging in the user by
     retrieving the necessary user data from the session and creating a login
     form for the application.</para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term>logoutURI</term>
    <listitem>
     <para>The <literal>logoutURI</literal> should be set to the URI which logs
     the user out of  the target application. This attribute is only needed if
     your application uses the single log-out feature of the Identity
     Provider.</para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term>assertionConsumerEndpoint</term>
    <listitem>
     <para>The default value of <literal>fedletapplication</literal> is the same
     as the Fedlet. If you modify this attribute you must change the metadata
     to match.</para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term>SPinitiatedSSOEndpoint</term>
    <listitem>
     <para>The default value is <literal>SPInitiatedSSO</literal>. If you
     modify this attribute you must change the metadata to match.</para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term>singleLogoutEndpoint</term>
    <listitem>
     <para>The default value of <literal>fedletSLO</literal> is the same as the
     Fedlet. If you modify this attribute you must change the metadata to
     match.</para>
    </listitem>
   </varlistentry>
  </variablelist>
 </section>

 <section xml:id="federation-example-settings">
  <title>Example Settings</title>

  <para>Application myportal requires a form with userName and password for
  login. The userName for myportal is the mail attribute at the user's Identity
  Provider. The password for myportal is the mailPassword at the Identity
  Provider. The incoming SAML2 assertion sent by the Identity Provider contains
  the mail and mailPassword attributes. The Federation Service validates the
  incoming assertion, sets the userName and password in the HttpSession to the
  values of mail and mailPassword from the assertion, and redirects the user
  to <literal>/myportal/login</literal>. The LoginRequest Filter then retrieves
  the login values from the session and creates the form to log the user into
  myportal.</para>

  <programlisting language="javascript">{
    "name": "FederationServlet",
    "type": "org.forgerock.openig.saml.FederationServlet",
    "config": {
            "assertionMapping": {
                 "userName":"mail",
                 "password":"mailPassword" 
            }
            "redirectURI":"/myportal/login",
            "logoutURI":"/myportal/logout" 
    }
}</programlisting>

<programlisting language="javascript">{
    "name": "LoginRequest",
    "type": "StaticRequestFilter",
    "config": {
        "method": "POST",
        "uri": "https://10.10.0.5/login",
        "form": {
            "userName": [${exchange.session.userName}],
            "password": [${exchange.session.password}],
        }   
    }   
}</programlisting>
 </section>

 <section xml:id="federation-idp-metadata">
  <title>Identity Provider Metadata</title>

  <para>The Identity Provider metadata must be in
  <filename>$HOME_DIR/.ForgeRock/SAML/idp.xml</filename> directory. See the 
  documentation for your Identity Provider for instructions on how to get the
  metadata.</para>

  <para>To export Identity Provider metadata from OpenAM, run a command such
  as the following.</para>

  <screen>$ ssoadm
 export-entity
 -u amadmin
 -f /tmp/pass
 -y http://www.idp.com:8080/openam
 -m /tmp/idp.xml</screen>
 </section>
</chapter>
