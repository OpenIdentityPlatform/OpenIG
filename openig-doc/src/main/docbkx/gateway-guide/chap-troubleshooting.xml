<?xml version="1.0" encoding="UTF-8"?>
<!--
  ! CCPL HEADER START
  !
  ! This work is licensed under the Creative Commons
  ! Attribution-NonCommercial-NoDerivs 3.0 Unported License.
  ! To view a copy of this license, visit
  ! http://creativecommons.org/licenses/by-nc-nd/3.0/
  ! or send a letter to Creative Commons, 444 Castro Street,
  ! Suite 900, Mountain View, California, 94041, USA.
  !
  ! You can also obtain a copy of the license at
  ! src/main/resources/legal-notices/CC-BY-NC-ND.txt.
  ! See the License for the specific language governing permissions
  ! and limitations under the License.
  !
  ! If applicable, add the following below this CCPL HEADER, with the fields
  ! enclosed by brackets "[]" replaced with your own identifying information:
  !      Portions Copyright [yyyy] [name of copyright owner]
  !
  ! CCPL HEADER END
  !
  !      Copyright 2011-2014 ForgeRock AS
  !    
-->
<chapter xml:id='chap-troubleshooting'
 xmlns='http://docbook.org/ns/docbook'
 version='5.0' xml:lang='en'
 xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'
 xsi:schemaLocation='http://docbook.org/ns/docbook
                     http://docbook.org/xml/5.0/xsd/docbook.xsd'
 xmlns:xlink='http://www.w3.org/1999/xlink'>
 <title>Troubleshooting</title>

 <indexterm>
  <primary>Troubleshooting</primary>
 </indexterm>

 <para>This chapter covers common problems and their solutions.</para>

 <section>
  <title>Object not found in heap</title>

  <programlisting language="none">
org.forgerock.json.fluent.JsonValueException: /handlerObject:
   object Router2 not found in heap
    at org.forgerock.openig.heap.HeapUtil.getRequiredObject(HeapUtil.java:69)
    at org.forgerock.openig.servlet.GatewayServlet.init(GatewayServlet.java:188)
    at org.eclipse.jetty.servlet.ServletHolder.initServlet(ServletHolder.java:595)
  </programlisting>

  <para>
   You have specified "handlerObject": "Router2"
   in <filename>config.json</filename>,
   but no handler configuration object named "Router2" exists.
   Make sure you have added an entry for the handler
   and that you have correctly spelled its name.
  </para>
 </section>

 <section>
  <title>Unexpected character (x) at position 1103</title>

  <programlisting language="none">
HTTP ERROR 500
Problem accessing /. Reason:

Unexpected character (x) at position 1103
  </programlisting>

  <para>This error usually means a missing double quote or a missing bracket
  in the configuration file.  Use a JSON editor or JSON validation tool
  such as <link xlink:show="new" xlink:href="http://jsonlint.com/"
  >JSONLint</link> to make sure your JSON is valid.</para>
 </section>

 <section>
  <title>The values in the flat file are incorrect</title>

  <para>Ensure the flat file is readable by the user running the container for
  ${projectName}. Values are all characters, including space and tabs, between the
  separator, so make sure the values are not padded with spaces.</para>
 </section>

 <section>
  <title>Problem accessing URL</title>

  <programlisting language="none">
HTTP ERROR 500

Problem accessing /myURL . Reason:

java.lang.String cannot be cast to java.util.List
Caused by:
java.lang.ClassCastException: java.lang.String cannot be cast to java.util.List
at org.forgerock.openig.filter.LoggingFilter.writeHeaders(LoggingFilter.java:132
at org.forgerock.openig.filter.LoggingFilter.logResponse(LoggingFilter.java:119)
at org.forgerock.openig.filter.LoggingFilter.filter(LoggingFilter.java:86)
at org.forgerock.openig.filter.Chain.handle(Chain.java:54)
  </programlisting>

  <para>This error is typically encountered when using the <link
  xlink:href="reference#AssignmentFilter"
  xlink:role="http://docbook.org/xlink/role/olink">AssignmentFilter</link> and
  setting a string value for one of the Headers. All headers are stored in
  Lists so the header must be addressed with a subscript. For example, if you
  try to set <literal>exchange.request.headers['Location']</literal> for a
  redirect in the response object, you should instead set
  <literal>exchange.request.headers['Location'][0]</literal>. A header without
  a subscript leads to the error above.</para>
 </section>

 <section>
  <title>StaticResponseHandler results in a blank page</title>

  <para>You must define an entity for the response. For example:</para>

  <programlisting language="javascript">{
    "name": "AccessDeniedHandler",
    "type": "org.forgerock.openig.handler.StaticResponseHandler",
    "config": {
        "status": 403,
        "reason": "Forbidden",
        "entity": "&lt;html>&lt;h2>User does not have permission&lt;/h2>&lt;/html>"
    }
}</programlisting>
 </section>

 <section>
  <title>${projectName} is not logging users in</title>

  <para>
   If you are proxying to more than one application in multiple DNS domains,
   you must make sure your container is enabled for domain cookies.
   For details on your specific container, see the section on
   <link
    xlink:show="new"
    xlink:href="gateway-guide#configure-container"
    xlink:role="http://docbook.org/xlink/role/olink"
   ><citetitle>Configuring Deployment Containers</citetitle></link>.
  </para>
 </section>

 <section>
  <title>Read timed out error when sending a request</title>

  <para>
   If a "baseURI" configuration setting
   causes a request to come back to ${projectName},
   ${projectName} never produces a response to the request.
   You then observe the following behavior.
  </para>

  <para>
   You send a request and ${projectName} seems to hang.
   Then you see a failure message,
   <literal>HTTP Status 500 - Read timed out</literal>,
   accompanied by ${projectName} throwing an exception,
   <literal>java.net.SocketTimeoutException: Read timed out</literal>.
  </para>

  <para>
   To fix this issue, make sure
   that "baseURI" configuration settings do not cause requests
   to come back to ${projectName}.
  </para>
 </section>

 <section>
  <title>${projectName} does not use new route configuration</title>

  <para>
   ${projectName} loads all configuration at startup.
   By default, it then periodically reloads changed route configurations.
  </para>

  <para>
   If you make changes to a route
   that result in an invalid configuration,
   ${projectName} logs errors,
   but it keeps the previous, correct configuration,
   and continues to use the old route.
  </para>

  <para>
   ${projectName} only uses the new configuration
   after you save a valid version or when you restart ${projectName}.
  </para>

  <para>
   Of course, if you restart ${projectName} with an invalid route configuration,
   then ${projectName} tries to load the invalid route at startup
   and logs an error.
   In that case, if there is no default handler to accept any incoming exchange
   for the invalid route, then you see an error,
   <literal>No handler to dispatch to</literal>.
  </para>
 </section>
</chapter>
