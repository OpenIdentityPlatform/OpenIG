<?xml version="1.0" encoding="UTF-8"?>
<!--
  ! CCPL HEADER START
  !
  ! This work is licensed under the Creative Commons
  ! Attribution-NonCommercial-NoDerivs 3.0 Unported License.
  ! To view a copy of this license, visit
  ! http://creativecommons.org/licenses/by-nc-nd/3.0/
  ! or send a letter to Creative Commons, 444 Castro Street,
  ! Suite 900, Mountain View, California, 94041, USA.
  !
  ! You can also obtain a copy of the license at
  ! trunk/legal/CC-BY-NC-ND.txt.
  ! See the License for the specific language governing permissions
  ! and limitations under the License.
  !
  ! If applicable, add the following below this CCPL HEADER, with the fields
  ! enclosed by brackets "[]" replaced with your own identifying information:
  !      Portions Copyright [yyyy] [name of copyright owner]
  !
  ! CCPL HEADER END
  !
  !      Copyright © 2010–2011 ApexIdentity Inc. All rights reserved.
  !      Portions Copyright 2012 ForgeRock AS
  !    
-->
<refentry xml:id='FileAttributesFilter'
 xmlns='http://docbook.org/ns/docbook'
 version='5.0' xml:lang='en'
 xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'
 xsi:schemaLocation='http://docbook.org/ns/docbook http://docbook.org/xml/5.0/xsd/docbook.xsd'
 xmlns:xlink='http://www.w3.org/1999/xlink'
 xmlns:xinclude='http://www.w3.org/2001/XInclude'>
 <refmeta>
  <refentrytitle>FileAttributesFilter</refentrytitle><manvolnum>5</manvolnum>
 </refmeta>
 <refnamediv>
  <refname>FileAttributesFilter</refname>
  <refpurpose>retrieve record from a file</refpurpose>
 </refnamediv>
 <refsect1>
  <title>Description</title>
  <para>Retrieves and exposes a record from a delimiter-separated file. Lookup
  of the record is performed using a specified <literal>key</literal>, whose
  <literal>value</literal> is derived from an exchange-scoped expression. The
  resulting record is exposed in an object whose location is specified by the
  <literal>target</literal> expression. If a matching record cannot be found,
  then the resulting object is empty.</para>

  <para>The retrieval of the record is performed lazily; it does not occur
  until the first attempt to access a value in the <literal>target</literal>.
  This defers the overhead of file operations and text processing until a value
  is first required. This also means that the value expression is not evaluated
  until the object is first accessed.</para>
 </refsect1>
 <refsect1>
  <title>Usage</title>
  <programlisting language="javascript">{
     "name": string,
     "type": "FileAttributesFilter",
     "config": {
         "file": string,
         "charset": string,
         "separator": string,
         "header": boolean,
         "fields": [ string, ... ],
         "target": lvalue-expression,
         "key": string,
         "value": expression
     }
}</programlisting>
 </refsect1>
 <refsect1>
  <title>Properties</title>
  <variablelist>
   <varlistentry>
    <term><code>"file"</code>: <emphasis>string, required</emphasis></term>
    <listitem>
     <para>The file containing the record to be read.</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><code>"charset"</code>: <emphasis>string, optional</emphasis></term>
    <listitem>
     <para>The character set the file is encoded in. Default:
     <literal>"UTF-8"</literal>.</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><code>"header"</code>: <emphasis>boolean, optional</emphasis></term>
    <listitem>
     <para>Indicates the first line of the file contains the set of defined
     field keys. Default: <literal>true</literal>.</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><code>"fields"</code>: <emphasis>array of strings,
    optional</emphasis></term>
    <listitem>
     <para>Explicit field keys in the order they appear in a record, overriding
     any existing field header. Default: use field header.</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><code>"target"</code>: <emphasis><link
    xlink:href="reference#Expressions"
    xlink:role="http://docbook.org/xlink/role/olink">lvalue-expression</link>,
    required</emphasis></term>
    <listitem>
     <para>Expression that yields the target object that will contain the
     record.</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><code>"key"</code>: <emphasis>string, required</emphasis></term>
    <listitem>
     <para>The name of the field in the file to perform the lookup on.</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><code>"value"</code>: <emphasis><link
    xlink:href="reference#Expressions"
    xlink:role="http://docbook.org/xlink/role/olink">expression</link>,
    required</emphasis></term>
    <listitem>
     <para>The name of the handler heap object to dispatch to in the event of
     caught exceptions.</para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>
 <refsect1>
  <title>Javadoc</title>
  <para><link xlink:show="new"
  xlink:href="http://openig.forgerock.org/apidocs/org/forgerock/openig/filter/FileAttributesFilter.html"
  >org.forgerock.openig.filter.FileAttributesFilter</link></para>
 </refsect1>
</refentry>
