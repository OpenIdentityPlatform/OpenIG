<?xml version="1.0" encoding="UTF-8"?>
<!--
  ! CCPL HEADER START
  !
  ! This work is licensed under the Creative Commons
  ! Attribution-NonCommercial-NoDerivs 3.0 Unported License.
  ! To view a copy of this license, visit
  ! http://creativecommons.org/licenses/by-nc-nd/3.0/
  ! or send a letter to Creative Commons, 444 Castro Street,
  ! Suite 900, Mountain View, California, 94041, USA.
  !
  ! You can also obtain a copy of the license at
  ! trunk/legal/CC-BY-NC-ND.txt.
  ! See the License for the specific language governing permissions
  ! and limitations under the License.
  !
  ! If applicable, add the following below this CCPL HEADER, with the fields
  ! enclosed by brackets "[]" replaced with your own identifying information:
  !      Portions Copyright [yyyy] [name of copyright owner]
  !
  ! CCPL HEADER END
  !
  !      Copyright © 2010–2011 ApexIdentity Inc. All rights reserved.
  !      Portions Copyright 2012-2014 ForgeRock AS
  !    
-->
<refentry xml:id='Functions'
 xmlns='http://docbook.org/ns/docbook'
 version='5.0' xml:lang='en'
 xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'
 xsi:schemaLocation='http://docbook.org/ns/docbook
                     http://docbook.org/xml/5.0/xsd/docbook.xsd'
 xmlns:xlink='http://www.w3.org/1999/xlink'>
 <refmeta>
  <refentrytitle>Functions</refentrytitle><manvolnum>5</manvolnum>
 </refmeta>

 <refnamediv>
  <refname>Functions</refname>
  <refpurpose>built-in functions to call within expressions</refpurpose>
 </refnamediv>

 <refsect1 xml:id="functions-description">
  <title>Description</title>
  <indexterm>
   <primary>Expressions</primary>
   <secondary>Functions</secondary>
  </indexterm>
  <para>A set of built-in functions that can be called from within
  <link xlink:href="reference#Expressions"
  xlink:role="http://docbook.org/xlink/role/olink"
  >expressions</link>.</para>
 </refsect1>

 <refsect1 xml:id="functions-contains">
  <title>contains</title>
  <literallayout class="monospaced">contains(object, value)</literallayout>

  <para>Returns <literal>true</literal> if the object contains the specified
  value. If the object is a string, a substring is searched for the value. If
  the object is a collection or array, its elements are searched for the
  value.</para>

  <variablelist>
   <title>Parameters</title>
   <varlistentry>
    <term>object</term>
    <listitem>
     <para>the object to be searched for the presence of.</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>value</term>
    <listitem>
     <para>the value to be searched for.</para>
    </listitem>
   </varlistentry>
  </variablelist>

  <variablelist>
   <title>Returns</title>
   <varlistentry>
    <term>true</term>
    <listitem>
     <para>if the object contains the specified value.</para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 xml:id="functions-indexOf">
  <title>indexOf</title>
  <literallayout class="monospaced">indexOf(string, substring)</literallayout>

  <para>Returns the index within a string of the first occurrence of a specified
  substring.</para>

  <variablelist>
   <title>Parameters</title>
   <varlistentry>
    <term>string</term>
    <listitem>
     <para>the string to be searched.</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>substring</term>
    <listitem>
     <para>the value to search for within the string.</para>
    </listitem>
   </varlistentry>
  </variablelist>

  <variablelist>
   <title>Returns</title>
   <varlistentry>
    <term>&#160;</term>
    <listitem>
     <para>the index of the first instance of substring, or -1 if not
     found.</para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 xml:id="functions-join">
  <title>join</title>
  <literallayout class="monospaced">join(strings, separator)</literallayout>

  <para>Joins an array of strings into a single string value, with a specified
  separator.</para>

  <variablelist>
   <title>Parameters</title>
   <varlistentry>
    <term>separator</term>
    <listitem>
     <para>the separator to place between joined elements.</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>strings</term>
    <listitem>
     <para>the array of strings to be joined.</para>
    </listitem>
   </varlistentry>
  </variablelist>

  <variablelist>
   <title>Returns</title>
   <varlistentry>
    <term>&#160;</term>
    <listitem>
     <para>the string containing the joined strings.</para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 xml:id="functions-keyMatch">
  <title>keyMatch</title>
  <literallayout class="monospaced">keyMatch(map, pattern)</literallayout>

  <para>Returns the first key found in a map that matches the specified <link
  xlink:href="reference#Expressions"
  xlink:role="http://docbook.org/xlink/role/olink"
  >regular expression pattern</link>, or <literal>null</literal> if no such
  match is found.</para>

  <variablelist>
   <title>Parameters</title>
   <varlistentry>
    <term>map</term>
    <listitem>
     <para>the map whose keys are to be searched.</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>pattern</term>
    <listitem>
     <para>a string containing the regular expression pattern to match.</para>
    </listitem>
   </varlistentry>
  </variablelist>

  <variablelist>
   <title>Returns</title>
   <varlistentry>
    <term>&#160;</term>
    <listitem>
     <para>the first matching key, or <literal>null</literal> if no match
     found.</para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 xml:id="functions-length">
  <title>length</title>
  <literallayout class="monospaced">length(object)</literallayout>

  <para>Returns the number of items in a collection, or the number of
  characters in a string.</para>

  <variablelist>
   <title>Parameters</title>
   <varlistentry>
    <term>object</term>
    <listitem>
     <para>the object whose length is to be determined.</para>
    </listitem>
   </varlistentry>
  </variablelist>

  <variablelist>
   <title>Returns</title>
   <varlistentry>
    <term>&#160;</term>
    <listitem>
     <para>the length of the object, or 0 if length could not be
     determined.</para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 xml:id="functions-matchingGroups">
  <title>matches</title>
  <literallayout class="monospaced">matchingGroups(string, pattern)</literallayout>

  <para>Returns an array of matching groups for a <link
  xlink:href="reference#Expressions"
  xlink:role="http://docbook.org/xlink/role/olink"
  >regular expression pattern</link> against a string, or
  <literal>null</literal> if no such match is found. The first element of the
  array is the entire match, and each subsequent element correlates to any
  capture group specified within the regular expression.</para>

  <variablelist>
   <title>Parameters</title>
   <varlistentry>
    <term>string</term>
    <listitem>
     <para>the string to be searched.</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>pattern</term>
    <listitem>
     <para>a string containing the regular expression pattern to match.</para>
    </listitem>
   </varlistentry>
  </variablelist>

  <variablelist>
   <title>Returns</title>
   <varlistentry>
    <term>&#160;</term>
    <listitem>
     <para>an array of matching groups, or <literal>null</literal> if no such
     match is found.</para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 xml:id="functions-matches">
  <title>matches</title>
  <literallayout class="monospaced">matches(string, pattern)</literallayout>

  <para>Returns <literal>true</literal> if the string contains the specified
  <link xlink:href="reference#Expressions"
  xlink:role="http://docbook.org/xlink/role/olink"
  >regular expression pattern</link>.</para>

  <variablelist>
   <title>Parameters</title>
   <varlistentry>
    <term>string</term>
    <listitem>
     <para>the string to be searched.</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>pattern</term>
    <listitem>
     <para>a string containing the regular expression pattern to find.</para>
    </listitem>
   </varlistentry>
  </variablelist>
  
  <variablelist>
   <title>Returns</title>
   <varlistentry>
    <term>true</term>
    <listitem>
     <para>if the string contains the specified regular expression pattern.</para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 xml:id="functions-split">
  <title>split</title>
  <literallayout class="monospaced">split(string, pattern)</literallayout>

  <para>Splits a string into an array of substrings around matches of the given
  <link xlink:href="reference#Expressions"
  xlink:role="http://docbook.org/xlink/role/olink">regular expression
  pattern</link>.</para>

  <variablelist>
   <title>Parameters</title>
   <varlistentry>
    <term>string</term>
    <listitem>
     <para>the string to be split.</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>pattern</term>
    <listitem>
     <para>the regular expression to split substrings around.</para>
    </listitem>
   </varlistentry>
  </variablelist>

  <variablelist>
   <title>Returns</title>
   <varlistentry>
    <term>&#160;</term>
    <listitem>
     <para>the resulting array of split substrings.</para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 xml:id="functions-toLowerCase">
  <title>toLowerCase</title>
  <literallayout class="monospaced">toLowerCase(string)</literallayout>

  <para>Converts all of the characters in a string to lower case.</para>

  <variablelist>
   <title>Parameters</title>
   <varlistentry>
    <term>string</term>
    <listitem>
     <para>the string whose characters are to be converted.</para>
    </listitem>
   </varlistentry>
  </variablelist>

  <variablelist>
   <title>Returns</title>
   <varlistentry>
    <term>&#160;</term>
    <listitem>
     <para>the string with characters converted to lower case.</para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 xml:id="functions-toString">
  <title>toString</title>
  <literallayout class="monospaced">toString(object)</literallayout>

  <para>Returns the string value of an aribtrary object.</para>

  <variablelist>
   <title>Parameters</title>
   <varlistentry>
    <term>object</term>
    <listitem>
     <para>the object whose string value is to be returned.</para>
    </listitem>
   </varlistentry>
  </variablelist>

  <variablelist>
   <title>Returns</title>
   <varlistentry>
    <term>&#160;</term>
    <listitem>
     <para>the string value of the object.</para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 xml:id="functions-toUpperCase">
  <title>toUpperCase</title>
  <literallayout class="monospaced">toUpperCase(string)</literallayout>

  <para>Converts all of the characters in a string to upper case.</para>

  <variablelist>
   <title>Parameters</title>
   <varlistentry>
    <term>string</term>
    <listitem>
     <para>the string whose characters are to be converted.</para>
    </listitem>
   </varlistentry>
  </variablelist>

  <variablelist>
   <title>Returns</title>
   <varlistentry>
    <term>&#160;</term>
    <listitem>
     <para>the string with characters converted to upper case.</para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 xml:id="functions-trim">
  <title>trim</title>
  <literallayout class="monospaced">trim(string)</literallayout>

  <para>Returns a copy of a string with leading and trailing whitespace
  omitted.</para>

  <variablelist>
   <title>Parameters</title>
   <varlistentry>
    <term>string</term>
    <listitem>
     <para>the string whose white space is to be omitted.</para>
    </listitem>
   </varlistentry>
  </variablelist>

  <variablelist>
   <title>Returns</title>
   <varlistentry>
    <term>&#160;</term>
    <listitem>
     <para>the string with leading and trailing white space omitted.</para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 xml:id="functions-urlDecode">
  <title>trim</title>
  <literallayout class="monospaced">urlDecode(string)</literallayout>

  <para>
   Returns the URL decoding of the provided string.
  </para>

  <variablelist>
   <title>Parameters</title>
   <varlistentry>
    <term>string</term>
    <listitem>
     <para>
      The string to be URL decoded, which may be <literal>null</literal>.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>

  <variablelist>
   <title>Returns</title>
   <varlistentry>
    <term>&#160;</term>
    <listitem>
     <para>
      The URL decoding of the provided string,
      or <literal>null</literal> if string was <literal>null</literal>.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>


 <refsect1 xml:id="functions-urlEncode">
  <title>trim</title>
  <literallayout class="monospaced">urlEncode(string)</literallayout>

  <para>
   Returns the URL encoding of the provided string.
  </para>

  <variablelist>
   <title>Parameters</title>
   <varlistentry>
    <term>string</term>
    <listitem>
     <para>
      The string to be URL encoded, which may be <literal>null</literal>.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>

  <variablelist>
   <title>Returns</title>
   <varlistentry>
    <term>&#160;</term>
    <listitem>
     <para>
      The URL encoding of the provided string,
      or <literal>null</literal> if string was <literal>null</literal>.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 xml:id="functions-javadoc">
  <title>Javadoc</title>
  <para><link xlink:show="new"
  xlink:href="${javadocBase}/org/forgerock/openig/el/Functions.html"
  >org.forgerock.openig.el.Functions</link></para>
 </refsect1>
</refentry>
