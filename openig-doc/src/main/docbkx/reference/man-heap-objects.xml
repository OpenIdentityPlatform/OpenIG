<?xml version="1.0" encoding="UTF-8"?>
<!--
  ! CCPL HEADER START
  !
  ! This work is licensed under the Creative Commons
  ! Attribution-NonCommercial-NoDerivs 3.0 Unported License.
  ! To view a copy of this license, visit
  ! http://creativecommons.org/licenses/by-nc-nd/3.0/
  ! or send a letter to Creative Commons, 444 Castro Street,
  ! Suite 900, Mountain View, California, 94041, USA.
  !
  ! You can also obtain a copy of the license at
  ! trunk/legal/CC-BY-NC-ND.txt.
  ! See the License for the specific language governing permissions
  ! and limitations under the License.
  !
  ! If applicable, add the following below this CCPL HEADER, with the fields
  ! enclosed by brackets "[]" replaced with your own identifying information:
  !      Portions Copyright [yyyy] [name of copyright owner]
  !
  ! CCPL HEADER END
  !
  !      Copyright © 2010–2011 ApexIdentity Inc. All rights reserved.
  !      Portions Copyright 2012-2014 ForgeRock AS
  !    
-->
<refentry xml:id='heap-objects'
 xmlns='http://docbook.org/ns/docbook'
 version='5.0' xml:lang='en'
 xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'
 xsi:schemaLocation='http://docbook.org/ns/docbook
                     http://docbook.org/xml/5.0/xsd/docbook.xsd'
 xmlns:xlink='http://www.w3.org/1999/xlink'>
 <refmeta>
  <refentrytitle>Heap Objects</refentrytitle><manvolnum>5</manvolnum>
 </refmeta>
 <refnamediv>
  <refname>Heap Objects</refname>
  <refpurpose>configure and initialize objects, with dependency injection</refpurpose>
 </refnamediv>
 <refsect1>
  <title>Description</title>
  <indexterm>
   <primary>Required configuration</primary>
   <secondary>Heap objects</secondary>
  </indexterm>
  <para>A heap is a collection of associated objects, initialized from
  declarative configuration artifacts. All configurable objects in ${projectName}
  are heap objects. Heap objects are created and initialized by associated
  "heaplets", which retrieve any objects an object depends on from the heap.
  The heap configuration is included as an object in the <link
  xlink:href="reference#gateway-servlet"
  xlink:role="http://docbook.org/xlink/role/olink">gateway servlet</link>
  configuration, and has the following format.</para>
 </refsect1>
 <refsect1>
  <title>Usage</title>
  <programlisting language="javascript">{
     "objects": [
         {
             "name": string,
             "type": string,
             "config": { <replaceable>object-specific configuration</replaceable> }
         }, ...
     ]  
}</programlisting>
 </refsect1>
 <refsect1>
  <title>Properties</title>
  <variablelist>
   <varlistentry>
    <term><code>"name"</code>: <emphasis>string, required</emphasis></term>
    <listitem>
     <para>The unique name to give the heap object in the heap. This name is
     used to resolve the heap object, for example when another heap object
     names a heap object dependency.</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><code>"type"</code>: <emphasis>string, required</emphasis></term>
    <listitem>
     <para>The class name of the object to be created. Example:
     <literal>"HandlerServlet"</literal>. To determine the type name, see
     the specific object documentation in this reference.</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><code>"config"</code>: <emphasis>object, required</emphasis></term>
    <listitem>
     <para>The configuration that is specific to the heap object being created.
     For an example, see the <link xlink:href="reference#HandlerServlet"
     xlink:role="http://docbook.org/xlink/role/olink">HandlerServlet</link>
     reference.</para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>
 <refsect1>
  <title>Automatically Created Objects</title>
  <variablelist>
   <para>When a heap is first created, it is automatically populated with some
   objects, without required configuration. An automatically created object can
   be overridden by creating a heap object with the same name.</para>
   <varlistentry>
    <term><code>"LogSink"</code></term>
    <listitem>
     <para>The default object to use for writing all audit and performance
     logging. Default: a <link xlink:href="reference#ConsoleLogSink"
     xlink:role="http://docbook.org/xlink/role/olink">ConsoleLogSink</link>
     object with default values.</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><code>"TemporaryStorage"</code></term>
    <listitem>
     <para>The default object to use for managing temporary buffers. Default: a
     <link xlink:href="reference#TemporaryStorage"
     xlink:role="http://docbook.org/xlink/role/olink">TemporaryStorage</link>
     object with default values.</para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>
 <refsect1>
  <title>Implicit Properties</title>
  <variablelist>
   <para>Every heap object has a set of implicit properties, which can be
   overridden on an object-by-object basis:</para>
   <varlistentry>
    <term><code>"logSink"</code>: <emphasis>string</emphasis></term>
    <listitem>
     <para>Specifies the heap object that should be used for audit and
     performance logging. Default: <literal>"LogSink"</literal>.</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><code>"temporaryStorage"</code>: <emphasis>string</emphasis></term>
    <listitem>
     <para>Specifies the heap object that should be used for temporary buffer
     storage. Default: <literal>"TemporaryStorage"</literal>.</para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>
</refentry>
