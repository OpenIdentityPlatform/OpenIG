<?xml version="1.0" encoding="UTF-8"?>
<!--
  ! CCPL HEADER START
  !
  ! This work is licensed under the Creative Commons
  ! Attribution-NonCommercial-NoDerivs 3.0 Unported License.
  ! To view a copy of this license, visit
  ! http://creativecommons.org/licenses/by-nc-nd/3.0/
  ! or send a letter to Creative Commons, 444 Castro Street,
  ! Suite 900, Mountain View, California, 94041, USA.
  !
  ! You can also obtain a copy of the license at
  ! trunk/legal/CC-BY-NC-ND.txt.
  ! See the License for the specific language governing permissions
  ! and limitations under the License.
  !
  ! If applicable, add the following below this CCPL HEADER, with the fields
  ! enclosed by brackets "[]" replaced with your own identifying information:
  !      Portions Copyright [yyyy] [name of copyright owner]
  !
  ! CCPL HEADER END
  !
  !      Copyright 2010â€“2011 ApexIdentity Inc.
  !      Portions Copyright 2012-2014 ForgeRock AS
  !
-->
<refentry xml:id='CaptureFilter'
          xmlns='http://docbook.org/ns/docbook'
          version='5.0' xml:lang='en'
          xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'
          xsi:schemaLocation='http://docbook.org/ns/docbook
                              http://docbook.org/xml/5.0/xsd/docbook.xsd'
          xmlns:xlink='http://www.w3.org/1999/xlink'>
 <refmeta>
  <refentrytitle>CaptureFilter</refentrytitle><manvolnum>5</manvolnum>
 </refmeta>
 <refnamediv>
  <refname>CaptureFilter</refname>
  <refpurpose>capture request and response messages</refpurpose>
 </refnamediv>
 <refsect1>
  <title>Description</title>
  <indexterm>
   <primary>Filters</primary>
   <secondary>CaptureFilter</secondary>
  </indexterm>
  <para>Captures request and response messages for further analysis.</para>
 </refsect1>
 <refsect1>
  <title>Usage</title>
  <programlisting language="javascript">{
     "name": string,
     "type": "CaptureFilter",
     "config": {
         "file": expression,
         "charset": string,
         "condition": expression,
         "captureEntity": boolean
     }
}</programlisting>
 </refsect1>
 <refsect1>
  <title>Properties</title>
  <variablelist>
   <varlistentry>
    <term><code>"file"</code>: <emphasis><link
     xlink:href="reference#Expressions"
     xlink:role="http://docbook.org/xlink/role/olink">expression</link>,
     required</emphasis></term>
    <listitem>
     <para>The path of the file where captured output should be written.</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><code>"charset"</code>: <emphasis>string, optional</emphasis></term>
    <listitem>
     <para>The character set to encode captured output with. Default:
     <literal>"UTF-8"</literal>.</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><code>"condition"</code>: <emphasis><link
    xlink:href="reference#Expressions"
    xlink:role="http://docbook.org/xlink/role/olink">expression</link>,
    optional</emphasis></term>
    <listitem>
     <para>The condition to evaluate to determine whether to capture an
     exchange. Default: unconditional.</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><code>"captureEntity"</code>: <emphasis>boolean,
    optional</emphasis></term>
    <listitem>
     <para>
      Whether the message entity should be captured.
     </para>

     <para>
      The filter omits binary entities,
      instead writing a <literal>[binary entity]</literal> marker to the file.
     </para>

     <para>
      Default: true
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>
 <refsect1>
  <title>Examples</title>

  <para>Log the entire request and response:</para>

  <programlisting language="javascript">
{
    "name": "LogToTemporaryFile",
    "type": "CaptureFilter",
    "config": {
        "file": "/tmp/gateway.log",
    }
}
  </programlisting>

  <para>Log the request and response. Do not log the entity:</para>

  <programlisting language="javascript">
{
    "name": "LogToTemporaryFile",
    "type": "CaptureFilter",
    "config": {
        "file": "/tmp/gateway.log"
        "captureEntity": false,
    }
}
  </programlisting>

  <para>
   You can use the CaptureFilter to capture the exchange
   before sending the request and when receiving the response
   as in the following example.
  </para>

  <programlisting language="javascript">
{
    "name": "OutgoingChain",
    "type": "Chain",
    "config": {
        "filters": [ "LogToTemporaryFile" ],
        "handler": "ClientHandler"
    }
},
{
    "name": "LogToTemporaryFile",
    "type": "CaptureFilter",
    "config": {
        "captureEntity": false,
        "file": "/tmp/gateway.log"
    }
}
  </programlisting>
 </refsect1>

 <refsect1>
  <title>Javadoc</title>
  <para><link xlink:show="new"
  xlink:href="${javadocBase}/org/forgerock/openig/filter/CaptureFilter.html"
  >org.forgerock.openig.filter.CaptureFilter</link></para>
 </refsect1>
</refentry>
