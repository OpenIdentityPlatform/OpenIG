<?xml version="1.0" encoding="UTF-8"?>
<!--
  ! CCPL HEADER START
  !
  ! This work is licensed under the Creative Commons
  ! Attribution-NonCommercial-NoDerivs 3.0 Unported License.
  ! To view a copy of this license, visit
  ! http://creativecommons.org/licenses/by-nc-nd/3.0/
  ! or send a letter to Creative Commons, 444 Castro Street,
  ! Suite 900, Mountain View, California, 94041, USA.
  !
  ! You can also obtain a copy of the license at
  ! trunk/legal-notices/CC-BY-NC-ND.txt.
  ! See the License for the specific language governing permissions
  ! and limitations under the License.
  !
  ! If applicable, add the following below this CCPL HEADER, with the fields
  ! enclosed by brackets "[]" replaced with your own identifying information:
  !      Portions Copyright [yyyy] [name of copyright owner]
  !
  ! CCPL HEADER END
  !
  !      Copyright 2010â€“2011 ApexIdentity Inc.
  !      Portions Copyright 2012-2014 ForgeRock AS
  !
-->
<book xml:id='reference'
 xmlns='http://docbook.org/ns/docbook' version='5.0' xml:lang='en'
 xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'
 xsi:schemaLocation='http://docbook.org/ns/docbook
                     http://docbook.org/xml/5.0/xsd/docbook.xsd'
 xmlns:xinclude='http://www.w3.org/2001/XInclude'
 xmlns:xlink='http://www.w3.org/1999/xlink'>
 <info>
  <xinclude:include href="../shared/mediaobject-fr-logo.xml" />
  <title>${projectName} Reference</title>
  <subtitle>Version ${docTargetVersion}</subtitle>
  <abstract>
   <para>
    Reference documentation for ${projectName}.
    ${projectName} provides a high-performance reverse proxy server
    with specialized session management and credential replay functionality.
   </para>
  </abstract>
  <copyright>
   <year>2011-2014</year>
   <holder>ForgeRock AS</holder>
  </copyright>
  <authorgroup>
   <author>
    <personname>
     <firstname>Paul </firstname><surname>Bryan</surname>
    </personname>
   </author>
   <author>
    <personname>
     <firstname>Mark </firstname><surname>Craig</surname>
    </personname>
   </author>
   <author>
    <personname>
     <firstname>Jamie </firstname><surname>Nelson</surname>
    </personname>
    <xinclude:include href="../shared/affiliation-fr.xml"/>
   </author>
  </authorgroup>
  <xinclude:include href="../legal.xml" />
  <date>${publicationDate}</date>
  <pubdate>${publicationDate}</pubdate>
  <releaseinfo>${softwareReleaseDate}</releaseinfo>
 </info>

 <toc />

 <xinclude:include href="preface.xml" />

 <!--
      For man page sections, let's follow the BSD and Linux numbering.
      In other words, user tools are 1, admin tools are 8 rather than 1M.
      See http://en.wikipedia.org/wiki/Man_page#Manual_sections for details.
 -->

 <reference xml:id="required-conf">
  <title>Required Configuration</title>

  <partintro>
   <para>
    You must specify at least the entry point for incoming requests,
    the ${projectName} Servlet,
    and the heap objects that configure and initialize objects,
    with dependency injection.
   </para>
  </partintro>

  <xinclude:include href="man-gateway-servlet.xml" />
  <xinclude:include href="man-heap-objects.xml" />
 </reference>

 <reference xml:id="handlers-conf">
  <title>Handlers</title>
  <partintro>
   <para>
    Handler objects process an HTTP exchange request
    by producing an associated response.
   </para>
  </partintro>

  <xinclude:include href="man-Chain.xml" />
  <xinclude:include href="man-ClientHandler.xml" />
  <xinclude:include href="man-DispatchHandler.xml" />
  <xinclude:include href="man-Route.xml" />
  <xinclude:include href="man-Router.xml" />
  <xinclude:include href="man-SamlFederationHandler.xml" />
  <xinclude:include href="man-ScriptableHandler.xml" />
  <xinclude:include href="man-SequenceHandler.xml" />
  <xinclude:include href="man-StaticResponseHandler.xml" />
 </reference>

 <reference xml:id="filters-conf">
  <title>Filters</title>
  <partintro>
   <para>
    Filter objects perform filtering
    of the request and response of an HTTP exchange.
   </para>
  </partintro>

  <xinclude:include href="man-AssignmentFilter.xml" />
  <xinclude:include href="man-CaptureFilter.xml" />
  <xinclude:include href="man-CookieFilter.xml" />
  <xinclude:include href="man-EntityExtractFilter.xml" />
  <xinclude:include href="man-ExceptionFilter.xml" />
  <xinclude:include href="man-FileAttributesFilter.xml" />
  <xinclude:include href="man-HeaderFilter.xml" />
  <xinclude:include href="man-CryptoHeaderFilter.xml" />
  <xinclude:include href="man-HttpBasicAuthFilter.xml" />
  <xinclude:include href="man-OAuth2ClientFilter.xml" />
  <xinclude:include href="man-OAuth2ResourceServerFilter.xml" />
  <xinclude:include href="man-RedirectFilter.xml" />
  <xinclude:include href="man-ScriptableFilter.xml" />
  <xinclude:include href="man-SqlAttributesFilter.xml" />
  <xinclude:include href="man-StaticRequestFilter.xml" />
  <xinclude:include href="man-SwitchFilter.xml" />
 </reference>

 <reference xml:id="decorators-conf">
  <title>Decorators</title>

  <partintro>
   <para>
    Decorators allow you to define heap objects that decorate other objects,
    adding the new behavior that the decorator provides.
    For example, you can configure a decorator object
    for capturing requests and responses to a file
    and then decorate other objects in the heap
    to trigger the capture.
   </para>

   <para>
    To decorate other objects individually,
    add the decorator's "name" value as a top-level field of the object.
    For example, suppose a capture decorator is named "capture".
   </para>

   <programlisting language="javascript">
{
    "name": "capture",
    "type": "CaptureDecorator",
    "config": {
        "captureEntity": false
    }
}
   </programlisting>

   <para>
    The following "ClientHandler" configuration
    captures requests before they are forwarded to the server.
   </para>

   <programlisting language="javascript">
{
    "name": "ClientHandler",
    "type": "ClientHandler",
    "capture": "request"
}
   </programlisting>

   <para>
    To decorate all the objects in the heap
    and in heaps that inherit from the current heap,
    use the "decorations" field of the heap object itself.
    (If "decorations" are defined in the child,
    then the child's definition overrides the parent's.
    ${projectName} does not merge "decorations" from the parent and child.)
    The following configuration captures requests and responses
    as they pass through the handler.
   </para>

   <programlisting language="javascript">
{
    "heap": {
        "objects": [
            {
                "name": "capture",
                "type": "CaptureDecorator",
                "config": {
                    "captureEntity": false
                }
            },
            {
                "name": "ClientHandler",
                "type": "ClientHandler"
            }
        ],
        "decorations": {
            "capture": "all"
        }
    },
    "handler": "ClientHandler"
}
   </programlisting>

   <para>
    To prevent loops, decorators themselves cannot be decorated.
   </para>

   <para>
    Interface Stability:
    <link
     xlink:show="new"
     xlink:href="reference#interface-stability"
     xlink:role="http://docbook.org/xlink/role/olink"
    >Evolving</link>
   </para>
  </partintro>

  <xinclude:include href="man-CaptureDecorator.xml" />
 </reference>

 <reference  xml:id="misc-conf">
  <title>Miscellaneous Heap Objects</title>

  <xinclude:include href="man-ConsoleLogSink.xml" />
  <xinclude:include href="man-FileLogSink.xml" />
  <xinclude:include href="man-HttpClient.xml" />
  <xinclude:include href="man-JwtSession.xml" />
  <xinclude:include href="man-KeyManager.xml" />
  <xinclude:include href="man-KeyStore.xml" />
  <xinclude:include href="man-NullLogSink.xml" />
  <xinclude:include href="man-TemporaryStorage.xml" />
  <xinclude:include href="man-TrustManager.xml" />
 </reference>

 <reference xml:id="expressions-conf">
  <title>Expressions</title>

  <partintro>
   <para>
    Many configuration parameters support dynamic expressions.
   </para>
  </partintro>

  <xinclude:include href="man-Expressions.xml" />
  <xinclude:include href="man-Functions.xml" />
  <xinclude:include href="man-Patterns.xml" />
 </reference>

 <reference xml:id="exchange-object-model-conf">
  <title>Exchange Object Model</title>

  <partintro>
   <para>
    Expressions are evaluated within an exchange object model scope.
   </para>
  </partintro>

  <xinclude:include href="man-Exchange.xml" />
  <xinclude:include href="man-Request.xml" />
  <xinclude:include href="man-Principal.xml" />
  <xinclude:include href="man-Response.xml" />
  <xinclude:include href="man-URI.xml" />
 </reference>

 <appendix xml:id="appendix-interface-stability">
  <title>Release Levels &amp; Interface Stability</title>

  <para>
   This appendix includes ForgeRock definitions
   for product release levels and interface stability.
  </para>

  <xinclude:include href="../shared/sec-release-levels.xml" />
  <xinclude:include href="../shared/sec-interface-stability.xml" />
 </appendix>

 <index />
</book>
