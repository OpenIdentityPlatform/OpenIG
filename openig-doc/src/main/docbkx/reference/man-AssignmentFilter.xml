<?xml version="1.0" encoding="UTF-8"?>
<!--
  ! CCPL HEADER START
  !
  ! This work is licensed under the Creative Commons
  ! Attribution-NonCommercial-NoDerivs 3.0 Unported License.
  ! To view a copy of this license, visit
  ! http://creativecommons.org/licenses/by-nc-nd/3.0/
  ! or send a letter to Creative Commons, 444 Castro Street,
  ! Suite 900, Mountain View, California, 94041, USA.
  !
  ! You can also obtain a copy of the license at
  ! trunk/legal/CC-BY-NC-ND.txt.
  ! See the License for the specific language governing permissions
  ! and limitations under the License.
  !
  ! If applicable, add the following below this CCPL HEADER, with the fields
  ! enclosed by brackets "[]" replaced with your own identifying information:
  !      Portions Copyright [yyyy] [name of copyright owner]
  !
  ! CCPL HEADER END
  !
  !      Copyright © 2010–2011 ApexIdentity Inc. All rights reserved.
  !      Portions Copyright 2012 ForgeRock AS
  !    
-->
<refentry xml:id='AssignmentFilter'
 xmlns='http://docbook.org/ns/docbook'
 version='5.0' xml:lang='en'
 xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'
 xsi:schemaLocation='http://docbook.org/ns/docbook http://docbook.org/xml/5.0/xsd/docbook.xsd'
 xmlns:xlink='http://www.w3.org/1999/xlink'
 xmlns:xinclude='http://www.w3.org/2001/XInclude'>
 <refmeta>
  <refentrytitle>AssignmentFilter</refentrytitle><manvolnum>5</manvolnum>
 </refmeta>
 <refnamediv>
  <refname>AssignmentFilter</refname>
  <refpurpose>conditionally assign values to expressions</refpurpose>
 </refnamediv>
 <refsect1>
  <title>Description</title>
  <indexterm>
   <primary>Filters</primary>
   <secondary>AssignmentFilter</secondary>
  </indexterm>
  <para>Conditionally assigns values to expressions before and after the
  exchange is handled.</para>
 </refsect1>
 <refsect1>
  <title>Usage</title>
  <programlisting language="javascript">{
     "name": string,
     "type": "AssignmentFilter",
     "config": {
         "onRequest": [
             {
                 "condition": expression,
                 "target": lvalue-expression,
                 "value": expression
             }, ...
         ],
         "onResponse": [
             {
                 "condition": expression,
                 "target": lvalue-expression,
                 "value": expression
             }, ...
         ]
     }
 }</programlisting>
 </refsect1>
 <refsect1>
  <title>Properties</title>
  <variablelist>
   <varlistentry>
    <term><code>"onRequest"</code>: <emphasis>array of objects,
    optional</emphasis></term>
    <listitem>
     <para>Defines a list of assignment bindings to evaluate before the
     exchange is handled.</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><code>"onResponse"</code>: <emphasis>array of objects,
    optional</emphasis></term>
    <listitem>
     <para>Defines a list of assignment bindings to evaluate after the exchange
     is handled.</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><code>"condition"</code>: <emphasis><link
    xlink:href="reference#Expressions"
    xlink:role="http://docbook.org/xlink/role/olink">expression</link>,
    optional</emphasis></term>
    <listitem>
     <para>Expression to evaluate to determine if an assignment should occur.
     Omitting the condition makes the assignment unconditional.</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><code>"target"</code>: <emphasis><link
    xlink:href="reference#Expressions"
    xlink:role="http://docbook.org/xlink/role/olink">lvalue-expression</link>,
    required</emphasis></term>
    <listitem>
     <para>Expression that yields the target object whose value is to be
     set.</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><code>"value"</code>: <emphasis><link
    xlink:href="reference#Expressions"
    xlink:role="http://docbook.org/xlink/role/olink">expression</link>,
    optional</emphasis></term>
    <listitem>
     <para>Expression that yields the value to be set in the target.</para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>
 <refsect1>
  <title>Example</title>
  <para>This is an example of how you would capture credentials and store them
  in the Gateway session during a login request. Notice the credentials are
  captured on the request, but not marked as valid until the response returns
  a positive 302. The credentials would then be used to login a user to a
  different application.</para>
  <programlisting language="javascript">{
  "name": "PortalLoginCaptureFilter",
  "type": "AssignmentFilter",
  "config": {
      "onRequest": [
          {   
              "target": "${exchange.session.authUsername}",
              "value": "${exchange.request.form['username'][0]}",
          },  
          {   
              "target": "${exchange.session.authPassword}",
              "value": "${exchange.request.form['password'][0]}",
          },  
          {   
              "comment": "Indicates authentication has not yet been confirmed.",
              "target": "${exchange.session.authConfirmed}",
              "value": "${false}",
          }   
      ],  
      "onResponse": [
          {   
              "condition": "${exchange.response.status == 302}",
              "target": "${exchange.session.authConfirmed}",
              "value": "${true}",
          }   
      ]   
  }
 }</programlisting>
 </refsect1>
 <refsect1>
  <title>Javadoc</title>
  <para><link xlink:show="new"
  xlink:href="http://docs.forgerock.org/en/openig/2.1.0/javadoc/org/forgerock/openig/filter/AssignmentFilter.html"
  >org.forgerock.openig.filter.AssignmentFilter</link></para>
 </refsect1>
</refentry>
