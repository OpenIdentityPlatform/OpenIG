<?xml version="1.0" encoding="UTF-8"?>
<!--
  ! CCPL HEADER START
  !
  ! This work is licensed under the Creative Commons
  ! Attribution-NonCommercial-NoDerivs 3.0 Unported License.
  ! To view a copy of this license, visit
  ! http://creativecommons.org/licenses/by-nc-nd/3.0/
  ! or send a letter to Creative Commons, 444 Castro Street,
  ! Suite 900, Mountain View, California, 94041, USA.
  !
  ! You can also obtain a copy of the license at
  ! trunk/legal/CC-BY-NC-ND.txt.
  ! See the License for the specific language governing permissions
  ! and limitations under the License.
  !
  ! If applicable, add the following below this CCPL HEADER, with the fields
  ! enclosed by brackets "[]" replaced with your own identifying information:
  !      Portions Copyright [yyyy] [name of copyright owner]
  !
  ! CCPL HEADER END
  !
  !      Copyright 2014 ForgeRock AS
  !
-->
<refentry xml:id="CaptureDecorator"
          xmlns="http://docbook.org/ns/docbook" version="5.0" xml:lang="en"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="http://docbook.org/ns/docbook
                              http://docbook.org/xml/5.0/xsd/docbook.xsd"
          xmlns:xlink="http://www.w3.org/1999/xlink"
          xmlns:xinclude="http://www.w3.org/2001/XInclude">
 <refmeta>
  <refentrytitle>CaptureDecorator</refentrytitle><manvolnum>5</manvolnum>
 </refmeta>

 <refnamediv>
  <refname>CaptureDecorator</refname>
  <refpurpose>capture request and response messages</refpurpose>
 </refnamediv>

 <refsect1>
  <title>Description</title>

  <indexterm>
   <primary>Decorators</primary>
   <secondary>CaptureDecorator</secondary>
  </indexterm>

  <para>
   Captures request and response messages for further analysis.
  </para>
 </refsect1>

 <refsect1>
  <title>Decorator Usage</title>

  <programlisting language="javascript">
{
    "name": string,
    "type": "CaptureDecorator",
    "config": {
        "logSink": LogSink reference,
        "captureEntity": boolean
    }
}
  </programlisting>

  <variablelist>
   <para>
    The decorator configuration has these properties.
   </para>

   <varlistentry>
    <term><code>"logSink"</code>: <emphasis>LogSink reference, optional</emphasis></term>
    <listitem>
     <para>
      Capture requests and responses to this LogSink.
     </para>

     <para>
      Provide either the name of a LogSink object defined in the heap,
      or an inline LogSink configuration object.
     </para>

     <para>
      Default: use the "LogSink" configured for the decorated object.
      This makes it possible to keep all logs in a central location.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><code>"captureEntity"</code>: <emphasis>boolean, optional</emphasis></term>
    <listitem>
     <para>
      Whether the message entity should be captured.
     </para>

     <para>
      The filter omits binary entities,
      instead writing a <literal>[binary entity]</literal> marker to the file.
     </para>

     <para>
      Default: false
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1>
  <title>Global Decorations Usage</title>

  <para>
   By using the global "decorations" field,
   you can apply the decorator to all relevant objects in the heap
   as described in
   <link
    xlink:href="reference#decorators-conf"
    xlink:show="new"
    xlink:role="http://docbook.org/xlink/role/olink"
   ><citetitle>Decorators</citetitle></link>.
  </para>

  <programlisting language="javascript">
{
    "heap": {
        "objects": array,
        "decorations": {
            "decorator name": "capture point(s)"
        }
    }
}
  </programlisting>

  <variablelist>
   <varlistentry>
    <term><code>"objects"</code>: array of heap objects, required</term>
    <listitem>
     <para>
      Array of heap object definitions,
      including or inheriting the CaptureDecorator
     </para>
    </listitem>
   </varlistentry>

   <xinclude:include href="../shared/varlistentry-capture-points.xml" />
  </variablelist>
 </refsect1>

 <refsect1>
  <title>Decorated Object Usage</title>

  <programlisting language="javascript">
{
    "name": string,
    "type": string,
    "config": object,
    decorator name: capture point(s)
}
  </programlisting>

  <variablelist>
   <varlistentry>
    <term><code>"name"</code>: string, required except for inline objects</term>
    <listitem>
     <para>
      The unique name of the object, just like an object that is not decorated
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><code>"type"</code>: string, required</term>
    <listitem>
     <para>
      The class name of the decorated object, which must be either a
      <link
       xlink:show="new"
       xlink:href="reference#filter-conf"
       xlink:role="http://docbook.org/xlink/role/olink"
      >Filter</link> or a
      <link
       xlink:show="new"
       xlink:href="reference#handlers-conf"
       xlink:role="http://docbook.org/xlink/role/olink"
      >Handler</link>
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><code>"config"</code>: object, required unless empty</term>
    <listitem>
     <para>
      The configuration of the object, just like an object that is not decorated
     </para>
    </listitem>
   </varlistentry>

   <xinclude:include href="../shared/varlistentry-capture-points.xml" />
  </variablelist>
 </refsect1>

 <refsect1>
  <title>Examples</title>

  <para>
   Decorator configured to log the entity:
  </para>

  <programlisting language="javascript">
{
    "name": "capture",
    "type": "CaptureDecorator",
    "config": {
        "captureEntity": true
    }
}
  </programlisting>

  <para>
   Decorator configured not to log the entity:
  </para>

  <programlisting language="javascript">
{
    "name": "capture",
    "type": "CaptureDecorator"
}
  </programlisting>

  <para>
   To capture requests and responses with the entity
   before sending the request and before returning the response,
   do so as in the following example.
  </para>

  <programlisting language="javascript">
{
    "heap": {
        "objects": [
            {
                "name": "capture",
                "type": "CaptureDecorator",
                "config": {
                    "captureEntity": true
                }
            },
            {
                "name": "ClientHandler",
                "type": "ClientHandler",
                "capture": [ "request", "response" ]
            }
        ]
    },
    "handler": "ClientHandler"
}
  </programlisting>

  <para>
   To capture all transformed requests and responses as they leave filters,
   declare global "declarations" as in the following example.
  </para>

  <programlisting language="javascript"><![CDATA[
{
    "heap": {
        "objects": [
            {
                "name": "capture",
                "type": "CaptureDecorator"
            },
            {
                "name": "Chain",
                "type": "Chain",
                "config": {
                    "filters": [
                        {
                            "type": "HeaderFilter",
                            "config": {
                                "messageType": "REQUEST",
                                "add": {
                                    "X-RequestHeader": [
                                        "Capture at filtered_request point",
                                        "And at filtered_response point"
                                    ]
                                }
                            }
                        }
                        {
                            "type": "HeaderFilter",
                            "config": {
                                "messageType": "RESPONSE",
                                "add": {
                                    "X-ResponseHeader": [
                                        "Capture at filtered_response point"
                                    ]
                                }
                            }
                        }
                    ],
                    "handler": {
                        "type": "StaticResponseHandler",
                        "config": {
                            "status": 200,
                            "reason": "OK",
                            "entity": "<html><p>Hello, World!</p></html>"
                        }
                    }
                }
            }
        ],
        "decorations": {
            "capture": [
                "filtered_request",
                "filtered_response"
            ]
        }
    },
    "handler": "Chain"
}
  ]]>
  </programlisting>
 </refsect1>

 <refsect1>
  <title>Javadoc</title>

  <para>
   <link
    xlink:show="new"
    xlink:href="${javadocBase}/index.html?org/forgerock/openig/decoration/capture/CaptureDecorator.html"
   >org.forgerock.openig.decoration.capture.CaptureDecorator</link>
  </para>
 </refsect1>
</refentry>
