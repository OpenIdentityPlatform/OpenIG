<?xml version="1.0" encoding="UTF-8"?>
<!--
  ! CCPL HEADER START
  !
  ! This work is licensed under the Creative Commons
  ! Attribution-NonCommercial-NoDerivs 3.0 Unported License.
  ! To view a copy of this license, visit
  ! http://creativecommons.org/licenses/by-nc-nd/3.0/
  ! or send a letter to Creative Commons, 444 Castro Street,
  ! Suite 900, Mountain View, California, 94041, USA.
  !
  ! You can also obtain a copy of the license at
  ! trunk/legal/CC-BY-NC-ND.txt.
  ! See the License for the specific language governing permissions
  ! and limitations under the License.
  !
  ! If applicable, add the following below this CCPL HEADER, with the fields
  ! enclosed by brackets "[]" replaced with your own identifying information:
  !      Portions Copyright [yyyy] [name of copyright owner]
  !
  ! CCPL HEADER END
  !
  !      Copyright 2010â€“2011 ApexIdentity Inc.
  !      Portions Copyright 2012-2015 ForgeRock AS
  !
-->
<refentry xml:id='gateway-servlet'
 xmlns='http://docbook.org/ns/docbook'
 version='5.0' xml:lang='en'
 xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'
 xsi:schemaLocation='http://docbook.org/ns/docbook
                     http://docbook.org/xml/5.0/xsd/docbook.xsd'
 xmlns:xlink='http://www.w3.org/1999/xlink'>
 <refmeta>
  <refentrytitle>Gateway Servlet</refentrytitle><manvolnum>5</manvolnum>
 </refmeta>

 <refnamediv>
  <refname>Gateway Servlet</refname>
  <refpurpose>entry point for all incoming requests</refpurpose>
 </refnamediv>

 <refsect1>
  <title>Description</title>

  <indexterm>
   <primary>Required configuration</primary>
   <secondary>Gateway servlet</secondary>
  </indexterm>

  <para>
   The gateway servlet is the entry point for all incoming requests.
   It is responsible for initializing a
   <link
    xlink:show="new"
    xlink:href="reference#heap-objects"
    xlink:role="http://docbook.org/xlink/role/olink"
   >heap of objects</link>,
   and dispatching all requests to a configured handler.
   The configuration of the gateway servlet is loaded
   from a JSON-encoded configuration file,
   expected by default at <filename>${warConfigDir}/config.json</filename>.
  </para>

  <itemizedlist>
   <para>
    The gateway servlet creates the following objects by default.
   </para>

   <listitem>
    <para>
     An
     <link
      xlink:show="new"
      xlink:href="reference#AuditDecorator"
      xlink:role="http://docbook.org/xlink/role/olink"
     >AuditDecorator</link> that you can use
     to trigger notification for audit events.
     The default AuditDecorator is named "audit".
    </para>
   </listitem>

   <listitem>
    <para>
     A
     <link
      xlink:show="new"
      xlink:href="reference#CaptureDecorator"
      xlink:role="http://docbook.org/xlink/role/olink"
     >CaptureDecorator</link> that you can use
     to capture requests and response messages,
     though not the entity body or the exchange.
     The default CaptureDecorator is named "capture".
    </para>
   </listitem>

   <listitem>
    <para>
     A
     <link
      xlink:show="new"
      xlink:href="reference#TimerDecorator"
      xlink:role="http://docbook.org/xlink/role/olink"
     >TimerDecorator</link> that you can use
     to record time spent within Filters and Handlers.
     The default TimerDecorator is named "timer".
    </para>
   </listitem>
  </itemizedlist>

  <para>
   The gateway servlet also looks for an object named "Session" in the heap.
   If it finds such an object,
   it uses that object as the default session producer.
   For example, to store session information
   in an HTTP cookie on the user-agent,
   you can define a "JwtSession" named "Session"
   in <filename>config.json</filename>.
   If you do that, however, stored session information must
   fit the constraints for storage in a JWT and in a cookie,
   as described in the
   <link
    xlink:show="new"
    xlink:href="reference#JwtSession"
    xlink:role="http://docbook.org/xlink/role/olink"
   >reference documentation for JwtSession</link>.
   If no such object is found,
   <literal>exchange.session</literal> is based on the Servlet HttpSession
   that is handled by the container where ${projectName} runs.
  </para>
 </refsect1>

 <refsect1>
  <title>Usage</title>

  <programlisting language="javascript">
{
  "handler": Handler reference or inline Handler declaration,
  "heap": [ configuration object, ... ],
  "baseURI": string,
  "logSink":  LogSink reference,
  "temporaryStorage": TemporaryStorage reference
}
  </programlisting>
 </refsect1>

 <refsect1>
  <title>Properties</title>

  <variablelist>
   <varlistentry>
    <term><code>"handler"</code>: <emphasis><link
      xlink:show="new"
      xlink:href="reference#handlers-conf"
      xlink:role="http://docbook.org/xlink/role/olink"
     >Handler</link> reference, required</emphasis></term>
    <listitem>
     <para>
      Dispatch all requests to this handler.
     </para>

     <para>
      Provide either the name of a Handler object defined in the heap,
      or an inline Handler configuration object.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><code>"heap"</code>: <emphasis>array of configuration objects, optional</emphasis></term>
    <listitem>
     <para>
      The
      <link
       xlink:show="new"
       xlink:href="reference#heap-objects"
       xlink:role="http://docbook.org/xlink/role/olink"
       >heap object</link>
      configuration.
     </para>

     <para>
      You can omit an empty array.
      If you only have one object in the heap,
      you can inline it as the handler value.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><code>"baseURI"</code>: <emphasis>string, optional</emphasis></term>
    <listitem>
     <para>
      Overrides the existing request URI,
      making requests relative to a new base URI.
     </para>

     <para>
      Only scheme, host and port are used in the supplied URI.
     </para>

     <para>
      Default: leave the request URI untouched.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><code>"logSink"</code>: <emphasis>LogSink reference, optional</emphasis></term>
    <listitem>
     <para>
      Send log messages to this LogSink.
     </para>

     <para>
      Provide either the name of a LogSink object defined in the heap,
      or an inline LogSink configuration object.
     </para>

     <para>
      Default: use the heap object named "LogSink".
      Otherwise use an internally-created ConsoleLogSink object
      that is named "LogSink" and that uses default settings
      for a ConsoleLogSink object.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><code>"temporaryStorage"</code>: <emphasis><link
      xlink:show="new"
      xlink:href="reference#TemporaryStorage"
      xlink:role="http://docbook.org/xlink/role/olink"
     >TemporaryStorage</link> reference, optional</emphasis></term>
    <listitem>
     <para>
      Cache content during processing
      based on this TemporaryStorage configuration.
     </para>

     <para>
      Provide either the name of a TemporaryStorage object defined in the heap,
      or an inline TemporaryStorage configuration object.
     </para>

     <para>
      Default: use the heap object named "TemporaryStorage".
      Otherwise use an internally-created TemporaryStorage object
      that is named "TemporaryStorage" and that uses default settings
      for a TemporaryStorage object.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1>
  <title>Javadoc</title>
  <para>
   <link
    xlink:show="new"
    xlink:href="${javadocBase}/index.html?org/forgerock/openig/servlet/GatewayServlet.html"
   >org.forgerock.openig.servlet.GatewayServlet</link></para>
 </refsect1>
</refentry>
