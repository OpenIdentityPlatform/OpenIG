{
    "config": {
        "dates": {
            "monthNames": "January, February, March, April, May, June, July, August, September, October, November, December",
            "monthNamesShort": "Jan., Feb., Mar., Apr., May., Jun., Jul., Aug., Sep., Oct., Nov., Dec.",
            "dayNames": "Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, Saturday",
            "dayNamesShort": "Sun. , Mon., Tue., Wed., Thu., Fri., Sat."
        },
        "messages": {
            "CommonMessages": {
                "serviceUnavailable": "Service unavailable",
                "unknown": "Unknown error - contact an administrator",
                "errorFetchingData": "Error fetching user data",
                "internalError": "Internal server error",
                "forbiddenError": "Forbidden request error.",
                "notFoundError": "Not found error.",
                "badRequestError": "Bad request error.",
                "conflictError": "Detected conflict in request.",
                "incorrectRevisionError": "Can't update the record because this isn't the latest version.",
                "securityDataChanged": "Security data has been changed",
                "tokenNotFound": "Token not found."
            },
            "OpenIGMessages":{
                "deleteAppSuccess": "Protection for '__title__' was removed",
                "deleteAppFailed": "Failed to remove protection for '__title__'",
                "settingsFailed": "Settings has failed",
                "settingsSuccess": "Settings saved",
                "invalidModel": "Can't create the config file because the model is not valid",
                "unknownFilterType": "Unknown filter type: '__message__'",
                "appSettingsSaveSuccess": "__filter__ settings saved",
                "modelTransformationFailed": "Failed to transform the model",
                "appDeployedSuccess": "Protection for '__title__' was deployed",
                "appDeployedFailed": "Failed to deploy protection for '__title__'",
                "appUndeployedSuccess": "Protection for '__title__' was undeployed",
                "appUndeployedFailed": "Failed to undeploy protection for '__title__'"
            }
        },
        "AppConfiguration": {
            "Navigation": {
                "links": {
                    "dashboard": "Dashboards",
                    "apps": "Protected applications",
                    "settings": "Settings"
                },
                "appsSideMenu": {
                    "overview": "Overview",
                    "capture": "Capture",
                    "throttling": "Throttling",
                    "authentication":"Authentication",
                    "authorization":"Authorization",
                    "monitoring": "Monitoring"                    
                }
            }
        }
    },
    "templates": {
        "user": {
            "404": {
                "pageNotFound": "Page not found",
                "requestedPageCouldNotBeFound": "Can't find the requested page"
            }
        },
        "apps": {
            "title": "Protected applications",
            "description": "Configure OpenIG to protect your applications",
            "filter": "Filter...",
            "addApp": "Protect an app",
            "help": "Help",
            "deployedState": "Deployed",
            "undeployedState": "Undeployed",
            "edit": "Edit",
            "duplicate": "Duplicate",
            "exportConfig": "Display route",
            "undeploy": "Undeploy",
            "deploy": "Deploy",
            "deleteDialog": "Delete protection for '__title__'?",
            "deployDialog":"Deploy protection for '__title__'?",
            "undeployDialog": "Undeploy protection for '__title__'?",
            "duplicateDialog":"Duplicate protection for '__title__'?",
            "changesPending": "Changes pending",
            "appSettings": "Protection settings",
            "moreOptions": "More options",
            "duplicateNameError": "This name already exists - provide a unique name",
            "duplicateIdError": "This ID already exists - provide a unique ID",
            "noAppItems": "Protection is not configured for any apps",
            "filters":{
                "Off": "Off",
                "OAuth2ClientFilter": "OpenID Connect",
                "PolicyEnforcementFilter":"OpenAM Policy Enforcement",
                "PasswordReplayFilter":"Password Replay",
                "ThrottlingFilter": "__numberOfRequests__ requests/__duration__ __durationRange__"
            },
            "capture": {
                "inboundMessages": "Inbound messages",
                "inboundRequests": "Inbound requests",
                "inboundResponses": "Inbound responses",
                "outboundMessages": "Outbound messages",
                "outboundRequests": "Outbound requests",
                "outboundResponses": "Outbound responses"
            },
            "tableColumns":{
                "name": "Name",
                "baseURI": "URL",
                "status": "Status"
            },
            "parts":{
                "settings":{
                    "addTitle": "Set up protection for an app",
                    "addButton": "Create route",
                    "editTitle": "Edit route",
                    "fields":{
                        "name":"Name",
                        "nameHint": "Friendly name for the protected application",
                        "id": "ID",
                        "idHint": "Unique ID for the route",
                        "baseURI": "Base URI",
                        "baseURIHint": "Internal URL for the application - OpenIG forwards proxied requests to this URL",
                        "condition": "Condition",
                        "conditionHint": "Requests must meet this condition to access the protected application",
                        "conditionPlaceHolder": "For example, /my-app or ${matches(request.uri.path, '^/my-app')}"
                    }
                },
                "authentication":{
                    "title": "Authentication",
                    "description": "Authenticate users to your app using OpenID Connect.",
                    "fields":{
                        "enabled": "Enable authentication",
                        "clientFilterGroup": "Client Filter",
                        "clientRegistrationGroup": "Client Registration",
                        "clientEndpoint": "Client Endpoint",
                        "clientEndpointHint": "Base URI for OpenID services.",
                         "clientId": "Client Id",
                         "clientIdHint": "Client identifier",
                         "clientSecret": "Client secret",
                         "clientSecretHint": "Client secret",
                         "scopes": "Scopes",
                         "scopesHint": "The specific scopes to use for this client",
                         "tokenEndpointUseBasicAuth": "Basic authentication",
                         "tokenEndpointUseBasicAuthHint": "Enable if token endpoint requires Basic Authentication",
                         "issuerWellKnownEndpoint": "Well-known Endpoint",
                         "issuerWellKnownEndpointHint": "The URL to the well-known configuration resource",
                         "requireHttps": "Require HTTPS",
                         "requireHttpsHint": "Requires incoming requests to use TLS (HTTPS)"
                    }
                },
                "authorization":{
                    "title": "Authorization",
                    "description": "Protect specific resources within your app using OpenAM as a policy decision point.",
                    "fields":{
                        "enabled": "Enable authorization",
                        "openAMconfigurationGroup": "OpenAM configuration",
                        "enforcementEndpointGroup": "Enforcement endpoint",
                        "openamUrl": "OpenAM URL",
                        "openamUrlHint": "The URL to an OpenAM service",
                        "pepUsername": "OpenAM Username",
                        "pepUsernameHint": "OpenAM username of the user with permission to request policy decisions",
                        "pepPassword": "OpenAM Password",
                        "pepPasswordHint": "The OpenAM password of the user with access to request policy decisions",
                        "pepRealm": "OpenAM Realm",
                        "pepRealmHint": "The realm of the user with permission to request policy decisions",
                        "realm": "Realm",
                        "realmHint": "OpenAM realm to use when requesting policy decisions",
                        "ssoTokenSubject": "OpenAM SSO token ID",
                        "ssoTokenSubjectHint": "OpenAM SSO token ID string for the subject making the request to the protected resource",
                        "application": "Policy Set",
                        "applicationHint": "OpenAM application to use when requesting policy decisions"
                    }
                },
                "capture":{
                    "title": "Capture",
                    "description": "Capture inbound and / or outbound HTTP messages.",
                    "fields":{
                        "enabled": "Enable",
                        "inboundGroup": "Inbound Messages",
                        "inboundRequest": "Capture Request",
                        "inboundResponse": "Capture Response",
                        "outboundGroup": "Outbound Messages",
                        "outboundRequest": "Capture Request",
                        "outboundResponse": "Capture Response"
                    }
                },
                "throttling":{
                    "title": "Throttling",
                    "description": "Limit the rate of operations on your api.",
                    "btnEnableTitle": "Enable Throttling",
                    "lblAllow": "Allow",
                    "lblPer": "requests per"
                }
            }
        },
        "settings":{
            "settingsTitle": "Settings",
            "authentication": "Authentication",
            "adminChannel": "Admin Channel",
            "functionalChannel": "Functional Channel",
            "currentPassword": "Current Password",
            "newPassword": "New Password",
            "confirmPassword": "Confirm Password",
            "port_network": "port number / network interface",
            "https": "https"
        }
    },
    "common": {
        "form": {
            "ok": "OK",
            "confirm": "Confirm",
            "true": "True",
            "false": "False",
            "update": "Update",
            "save": "Save",
            "create": "Create",
            "cancel": "Cancel",
            "close": "Close",
            "logout": "Log out",
            "register": "Register",
            "home": "Home",
            "start": "Start",
            "continue": "Continue",
            "back": "Back",
            "delete": "Delete",
            "details": "Details",
            "pleaseSelect": "Please Select",
            "addUser": "Add user",
            "decision": "Decision",
            "accept": "Accept",
            "reject": "Reject",
            "createdAt": "Created at",
            "search": "Search",
            "submit": "Submit",
            "actions": "Actions",
            "complete": "Complete",
            "reset": "Reset",
            "copyright": "Copyright (c) 2010-16 ForgeRock, all rights reserved.",
            "sessionExpired": "Session Expired",
            "enableCookies": "Cookies must be enabled to login",
            "reloadGrid": "Reload Grid",
            "clearFilters": "Clear Filters",
            "passwordPlaceholder": "••••••••••••",
            "warning" : "Warning!",
            "validation": {
                "VALID_PHONE_FORMAT": "Must be a valid phone number",
                "VALID_NAME_FORMAT": "Must have valid name characters",
                "VALID_EMAIL_ADDRESS_FORMAT": "Must be a valid email address",
                "AT_LEAST_X_CAPITAL_LETTERS": "At least __numCaps__ capital letters",
                "AT_LEAST_X_NUMBERS": "At least __numNums__ numbers",
                "CANNOT_CONTAIN_OTHERS": "Cannot contain values from: __disallowedFields__",
                "CANNOT_CONTAIN_CHARACTERS": "Cannot contain characters: __forbiddenChars__",
                "MIN_LENGTH": "At least __minLength__ characters",
                "REQUIRED": "Cannot be blank",
                "UNIQUE": "Already exists",
                "REAUTH_REQUIRED": "",
                "formContainsErrors": "Form contains validation errors",
                "atLeastOneCapitalLetter": "At least one capital letter",
                "atLeastOneNumber": "At least one number",
                "atLeast8Characters": "At least 8 characters",
                "cannotMatchLogin": "Cannot match login",
                "confirmationMatchesPassword": "Passwords must match",
                "usernameExists": "Username already exists",
                "emailAddressAlreadyExists": "Email address already exists",
                "onlyAlphabeticCharacters": "Only alphabetic characters",
                "onlyNumbersAndSpecialCharacters": "Only numbers and special characters",
                "cannotMatchOldPassword": "Cannot match old password",
                "minimum4Characters": "Minimum 4 characters",
                "acceptanceRequiredForRegistration": "Acceptance required for registration",
                "incorrectPassword": "Incorrect password",
                "incorrectSecurityAnswer": "Incorrect answer",
                "required": "Required",
                "emailNotValid": "Not a valid email address.",
                "emailExists": "Email address already exists.",
                "shouldBeLong": "Should be long value",
                "wrongDateFormat": "Wrong format",
                "baseURINotValid": "Not a valid uri",
                "baseURIContainsPath": "Cannot contain path",
                "URINotValid": "Not a valid uri",
                "numberGreaterThanOrEqual": "Value must be greater than or equal to __minAttr__",
                "notUrlCompatible": "Value is not URI compatible. Use only lowercase letters, numbers and dash"
            }
        },
        "modalWindow": {
            "title": {
                "configExport": "JSON for the current configuration"
            },
            "button": {
                "copyToClipboard": "Copy to clipboard"
            },
            "message":{
                "copied": "Copied",
                "copyFailed": "Copy failed"
            }
        },
        "grid": {
            "pagination": {
                "first": "First",
                "previous": "Previous",
                "next": "Next",
                "last": "Last"
            }
        },
        "timeSlot":{
            "ns": "Nanosecond",
            "us": "Microsecond",
            "ms": "Millisecond",
            "s": "Second",
            "m": "Minute",
            "h": "Hour",
            "d": "Day"
        }
    }
}
